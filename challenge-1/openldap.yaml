apiVersion: apps/v1
kind: Deployment
metadata:
  name: openldap
  labels:
    app.kubernetes.io/name: openldap
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: openldap
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: openldap
    spec:
      containers:
        - name: openldap
          image: docker.io/bitnami/openldap:latest
          imagePullPolicy: "IfNotPresent"
          lifecycle:
            postStart:
              exec:
                command:
                - /bin/sh
                - -c
                - |
                  sleep 30
                  ldapadd -H ldap://localhost:1389 -x -D cn=admin,dc=example,dc=org -w adminpassword -f tmp/james.ldif
          env:
            - name: LDAP_ADMIN_USERNAME
              value: "admin"
            - name: LDAP_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: adminpassword
                  name: openldap
            - name: LDAP_USERS
              valueFrom:
                secretKeyRef:
                  key: users
                  name: openldap
            - name: LDAP_PASSWORDS
              valueFrom:
                secretKeyRef:
                  key: passwords
                  name: openldap
          ports:
            - name: tcp-ldap
              containerPort: 1389
          volumeMounts:
          - name: config-volume
            mountPath: /tmp/
      volumes:
      - name: config-volume
        configMap:
          name: ldap-user-config
---
apiVersion: v1
kind: Service
metadata:
  name: openldap
  labels:
    app.kubernetes.io/name: openldap
spec:
  type: ClusterIP
  ports:
    - name: tcp-ldap
      port: 1389
      targetPort: tcp-ldap
      protocol: TCP
  selector:
    app.kubernetes.io/name: openldap
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ldap-user-config
  namespace: default
data:
  james.ldif: |
    dn: cn=james,dc=example,dc=org
    objectClass: top
    objectClass: inetOrgPerson
    gn: James
    sn: Forbes
    ou: devops
    cn: james
    userPassword: admin123
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: openldap
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: webpage
  policyTypes:
  - Egress
  - Ingress
---
apiVersion: crd.projectcalico.org/v1
kind: NetworkPolicy
metadata:
  name: allow-tcp-6379
spec:
  selector: app.kubernetes.io/name == 'webpage'
  types:
  - Ingress
  ingress:
  - action: deny
    protocol: TCP
    source: {}