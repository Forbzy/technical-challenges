apiVersion: apps/v1
kind: Deployment
metadata:
  name: webhook-service
  labels:
    app.kubernetes.io/name: webhook-service
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: webhook-service
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: webhook-service
    spec:
      containers:
        - name: webhook-service
          image: forbesj/webhook-service:plain
          imagePullPolicy: "IfNotPresent"
          command:
          - /bin/sh
          - -c
          - |
             ./main openldap:1389 /tmp/key.pem /tmp/cert.pem &>/var/log/k8s-ldap-authentication.log &
             sleep 1d
          ports:
          - name: https
            containerPort: 9443
---
apiVersion: v1
kind: Service
metadata:
  name: webhook-service
  labels:
    app.kubernetes.io/name: webhook-service
spec:
  type: ClusterIP
  ports:
    - name: https
      port: 9443
      targetPort: https
      protocol: TCP
  selector:
    app.kubernetes.io/name: webhook-service
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: ca-issuer
    meta.helm.sh/release-name: webhook-service
    meta.helm.sh/release-namespace: default
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.org/mergeable-ingress-type: minion
    nginx.org/ssl-services: webhook-service
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
  labels:
    app.kubernetes.io/name: webhook-service
  name: webhook-service
  namespace: default
spec:
  ingressClassName: nginx
  rules:
  - host: host.docker.internal
    http:
      paths:
      - backend:
          service: 
            name: webhook-service
            port:
              number: 9443
        pathType: Prefix
        path: /webhook-service